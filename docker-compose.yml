version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
    - ./app/:/app/
    expose:
      - 5000
    environment:
      - SECRET_KEY=wowsuchsecret
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=bigpassword
    command: ['gunicorn', 'server:create_app()', '-b', '0.0.0.0:5000', '--reload']
    depends_on:
      - db
      - migrations

  initializer:
    build:
      context: .
      dockerfile: Dockerfile
    command: ['python3', 'initializer.py']
    depends_on:
      - db

  db:
    image: library/postgres:13-alpine
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
    ports:
    - 5432:5432

  redis:
    image: redis:latest

  flower:
    image: mher/flower:0.9.5
    environment:
      - CELERY_BROKER_URL=amqp://admin:bigpassword@rabbit:5672//
      - CELERY_BACKEND_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
      - FLOWER_PURGE_OFFLINE_WORKERS=10
    ports:
      - 5555:5555
    links:
      - rabbit
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  celery_worker:
    scale: 1
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A server.tasks worker -l INFO --uid 1
    volumes:
    - ./app/:/app/
    environment:
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=bigpassword
    depends_on: 
      - rabbit

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A server.tasks beat -l INFO --uid 1
    volumes:
    - ./app/:/app/
    environment:
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=bigpassword
    depends_on: 
      - rabbit

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile.nginx
    ports:
      - 1337:80
    depends_on: 
      - app

  rabbit:
    build:
      context: rabbit
      dockerfile: Dockerfile.rabbit
    
volumes:
  postgres_data: